stages:
  - build
  - deploy

variables:
  NODE_ENV: production
  DEPLOY_SERVER: 192.168.0.28
  DEPLOY_USER: deploy_user  # Change this to your actual deploy user
  DEPLOY_PORT: 22
  DEPLOY_APP_NAME: curadoria-agil
  DEPLOY_APP_PORT: 3000

build:
  stage: build
  image: node:18-alpine
  services:
    - docker:dind
  before_script:
    - corepack enable && corepack prepare pnpm@latest --activate
  script:
    - pnpm install
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_SERVER "docker pull $CI_REGISTRY_IMAGE"
    - ssh -o StrictHostKeyChecking=no -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_SERVER "docker stop $DEPLOY_APP_NAME || true"
    - ssh -o StrictHostKeyChecking=no -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_USER "docker rm $DEPLOY_APP_NAME || true"
    - ssh -o StrictHostKeyChecking=no -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_SERVER "docker run -d -p $DEPLOY_APP_PORT:3000 --name $DEPLOY_APP_NAME $CI_REGISTRY_IMAGE"
  when: manual
  only:
    - main
